services:
  groq-api-playground:
    build:
      context: ..
      dockerfile: Dockerfile
      target: production
    image: groq-api-playground:latest
    container_name: groq-playground
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_GROQ_API_KEY=${GROQ_API_KEY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - groq-network
    labels:
      - "com.groq.playground.description=Groq API Playground Application"
      - "com.groq.playground.version=1.0.0"

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: groq-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - groq-api-playground
    restart: unless-stopped
    networks:
      - groq-network
    profiles:
      - production
      - proxy

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: groq-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - groq-network
    profiles:
      - cache
      - production

networks:
  groq-network:
    driver: bridge
    name: groq-network

volumes:
  redis_data:
    driver: local
    name: groq_redis_data
